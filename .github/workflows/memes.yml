name: 'Memes'

on:
  push:
    branches: ['*']
    tags: ['*']

jobs:
  memes:
    name: 'Memes'
    runs-on: [windows-2022]
    if: always()
    steps:
      - name: 'Download OBS'
        run: |
          curl -L "https://github.com/obsproject/obs-studio/releases/download/29.0.2/OBS-Studio-29.0.2-Full-x64.zip" -o obs.zip
          7z x "obs.zip"

      - name: 'Run OBS'
        run: |
          cd bin\64bit
          .\obs64.exe --portable

      - name: 'Wait 30 seconds, kill OBS'
        run: |
          Start-Sleep -Seconds 10.0
          Get-Process obs64 | Foreach-Object { $_.CloseMainWindow() | Out-Null } | stop-process -force

      - name: 'Upload build artifact'
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: 'obs-dir-windows'
          path: 'config/'

  memes_mac:
    name: 'Memes macOS'
    runs-on: [macos-latest]
    if: always()
    steps:
      - name: 'Figure out macOS Library path'
        id: folder
        run: |
          cd "/Library/Application Support"
          echo "folder=$(pwd)/obs-studio" >> $GITHUB_OUTPUT

      - name: 'Download OBS'
        run: |
          curl -L "https://github.com/obsproject/obs-studio/releases/download/29.0.2/obs-studio-29.0.2-macos-x86_64.dmg" -o obs.dmg
          hdiutil attach obs.dmg
          cp -rf /Volumes/**/OBS.app /Applications/

      - name: 'Run OBS'
        run: |
          open /Applications/OBS.app --args "--verbose"

      - name: 'Wait 30 seconds, kill OBS'
        run: |
          sleep 10
          osascript -e 'quit app "OBS"'

      - name: 'Upload build artifact'
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: 'obs-dir-mac'
          path: ${{ steps.folder.outputs.folder }}
