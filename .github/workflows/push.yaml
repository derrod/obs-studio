name: Push
run-name: ${{ github.ref_name }} push run 🚀
on:
  push:
    paths-ignore:
      - '**.md'
    branches:
      - master
      - 'release/**'
    tags:
      - '*'
permissions:
  contents: write
jobs:
  check-format:
    name: Format 🔍
    if: github.ref_name == 'master'
    uses: ./.github/workflows/check-format.yaml
    permissions:
      contents: read

  build-project:
    name: Build 🧱
    uses: ./.github/workflows/build-project.yaml
    secrets: inherit
    permissions:
      contents: read

  compatibility-validation:
    name: Validate Compatibility 🕵️
    if: github.ref_name == 'master'
    runs-on: ubuntu-22.04
    permissions:
      checks: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for Changed Files ✅
        uses: ./.github/actions/check-changes
        id: checks
        with:
          baseRef: ${{ github.event.before }}
          checkGlob: plugins/win-capture/data/*.json

      - name: Check for Invalid Compatibility Data 📉
        if: fromJSON(steps.checks.outputs.hasChangedFiles)
        uses: ./.github/actions/compatibility-validator
        with:
          repositorySecret: ${{ github.token }}

  services-validation:
    name: Validate Services 🕵️
    if: github.ref_name == 'master'
    runs-on: ubuntu-22.04
    permissions:
      checks: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for Changed Files ✅
        uses: ./.github/actions/check-changes
        id: checks
        with:
          baseRef: ${{ github.event.before }}
          checkGlob: plugins/rtmp-services/data/*.json

      - name: Check Services JSON Schema 📉
        if: fromJSON(steps.checks.outputs.hasChangedFiles)
        uses: ./.github/actions/services-validator
        with:
          repositorySecret: ${{ github.token }}
          runSchemaChecks: true
          runServiceChecks: false

  update-documentation:
    name: Update Documentation 📖
    if: github.repository_owner == 'obsproject' && (github.ref_name == 'master' || github.ref_type == 'tag')
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for Changed Files ✅
        if: github.ref_type != 'tag'
        uses: ./.github/actions/check-changes
        id: checks
        with:
          baseRef: ${{ github.event.before }}
          checkGlob: '!(cmake*)'

      - uses: ./.github/actions/generate-docs
        if: github.ref_type == 'tag' || fromJSON(steps.checks.outputs.hasChangedFiles)
        with:
          disableLinkExtensions: ${{ github.ref_type == 'tag' }}

  deploy-documentation:
    name: Deploy Documentation to Cloudflare ☁️
    if: github.repository_owner == 'obsproject' && github.ref_type == 'tag'
    runs-on: ubuntu-22.04
    needs: update-documentation
    defaults:
      run:
        shell: bash
    environment:
      name: cf-pages-deploy
    steps:
      - name: Get Commit Information 🆔
        id: setup
        run: |
          : Get Commit Hash 🆔
          echo "commitHash=${GITHUB_SHA:0:9}" >> $GITHUB_OUTPUT

      - uses: actions/download-artifact@v3
        with:
          name: OBS Studio Docs (No Extensions) ${{ steps.setup.outputs.commitHash }}
          path: docs

      - name: Set Up Redirects 🔄
        run: |
          : Set Up Redirects 🔄
          if [[ "${RUNNER_DEBUG}" ]]; then set -x; fi

          echo "/previous/27.2 https://obsproject.com/docs/27.2 302" >> docs/_redirects
          echo "/previous/:major.:minor https://:major-:minor.${{ vars.CF_PAGES_PROJECT }}.pages.dev 302" >> docs/_redirects

      - name: Publish to Live Page
        uses: cloudflare/wrangler-action@4c10c1822abba527d820b29e6333e7f5dac2cabd
        with:
          workingDirectory: docs
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages publish . --project-name=${{ vars.CF_PAGES_PROJECT }} --commit-hash='${{ steps.setup.outputs.commitHash }}'

  create-appcast:
    name: Create Sparkle Appcast 🎙️
    if: github.repository_owner == 'obsproject' && github.ref_type == 'tag'
    runs-on: macos-13
    needs: build-project
    strategy:
      fail-fast: false
      matrix:
        target: [arm64, x86_64]
    defaults:
      run:
        shell: zsh --no-rcs --errexit --pipefail {0}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Set Up Environment 🔧
        id: setup
        run: |
          : Set Up Environment 🔧
          if (( ${+RUNNER_DEBUG} )) setopt XTRACE

          local channel='stable'
          if [[ ${GITHUB_REF_NAME} == *(beta|rc)* ]] {
            channel='beta'
          }

          local -A arch_names=(x86_64 intel arm64 apple)
          print "cpuName=${arch_names[${{ matrix.target }}]}" >> $GITHUB_OUTPUT
          print "commitHash=${GITHUB_SHA:0:9}" >> $GITHUB_OUTPUT
          print "channel=${channel}" >> $GITHUB_OUTPUT

      - name: Download Artifact 📥
        uses: actions/download-artifact@v3
        with:
          name: obs-studio-macos-${{ matrix.target }}-${{ steps.setup.outputs.commitHash }}

      - name: Generate Appcast 🎙️
        id: generate-appcast
        uses: ./.github/actions/sparkle-appcast
        with:
          sparklePrivateKey: ${{ secrets.SPARKLE_PRIVATE_KEY }}
          baseImage: ${{ github.workspace }}/obs-studio-*-macos-${{ steps.setup.outputs.cpuName }}.dmg
          channel: ${{ steps.setup.outputs.channel }}
          count: 1
          urlPrefix: 'https://cdn-fastly.obsproject.com/downloads'
          customTitle: 'OBS Studio'
          customLink: 'https://obsproject.com/'

      - name: Upload Artifacts 📡
        uses: actions/upload-artifact@v3
        with:
          name: macos-sparkle-update
          path: ${{ github.workspace }}/output

  create-windows-update:
    name: Create Windows Update 🥩
    if: github.ref_type == 'tag'
    runs-on: windows-2022
    needs: build-project
    permissions:
      contents: 'read'
      id-token: 'write'
    defaults:
      run:
        shell: pwsh
    environment:
      name: bouf
    steps:
      - uses: actions/checkout@v3
        with:
          path: "repo"
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Set Up Environment 🔧
        id: setup
        env:
          BOUF_ACTION_HASH: '5e348990253267b085d970ef6033ac992c5dfb71384f032ac63e90821f30fc96'
        run: |
          $channel = if ($env:GITHUB_REF_NAME -match "(beta|rc)") { "beta" } else { "stable" }
          $shortHash = $env:GITHUB_SHA.Substring(0,9)
          "channel=${channel}" >> $env:GITHUB_OUTPUT
          "commitHash=${shortHash}" >> $env:GITHUB_OUTPUT
          
          # Ensure files in action haven't been modified
          $folderHash = ''
          $files = Get-ChildItem "${{ github.workspace }}\repo\.github\actions\bouf"
          foreach ($file in $files) {
            $folderHash += (Get-FileHash $file -Algorithm SHA256).Hash
          }
          # This is stupid but so is powershell
          $stream = [IO.MemoryStream]::new([byte[]][char[]]$folderHash)
          if ((Get-FileHash -InputStream $stream -Algorithm SHA256).Hash -ne "$env:BOUF_ACTION_HASH") {
            throw "bouf action folder hash does not match."
          }

      - name: Download Artifact 📥
        uses: actions/download-artifact@v3
        with:
          name: obs-studio-windows-x64-${{ steps.setup.outputs.commitHash }}
          path: ${{ github.workspace }}/build

      - name: Run bouf 🥩
        uses: ./repo/.github/actions/bouf
        with:
          gcpWorkloadIdentityProvider: ${{ secrets.GCP_IDENTITY_POOL }}
          gcpServiceAccountName: ${{ secrets.GCP_SERVICE_ACCOUNT_NAME }}
          version: ${{ github.ref_name }}
          channel: ${{ steps.setup.outputs.channel }}

      - name: Upload Signed Build
        uses: actions/upload-artifact@v4
        with:
          name: obs-studio-windows-x64-${{ github.ref_name }}-signed
          compression-level: 6
          path: ${{ github.workspace }}/output/install

      - name: Upload PDBs
        uses: actions/upload-artifact@v4
        with:
          name: obs-studio-windows-x64-${{ github.ref_name }}-pdbs
          compression-level: 9
          path: ${{ github.workspace }}/output/pdbs

      - name: Upload Installer
        uses: actions/upload-artifact@v4
        with:
          name: obs-studio-windows-x64-${{ github.ref_name }}-installer
          compression-level: 0
          path: ${{ github.workspace }}/output/*.exe

      - name: Upload Updater Files
        uses: actions/upload-artifact@v4
        with:
          name: obs-studio-windows-x64-${{ github.ref_name }}-patches
          compression-level: 0
          path: |
            ${{ github.workspace }}/output/updater
            ${{ github.workspace }}/output/*.json
            ${{ github.workspace }}/output/*.sig
            ${{ github.workspace }}/output/*.txt
            ${{ github.workspace }}/output/*.rst
